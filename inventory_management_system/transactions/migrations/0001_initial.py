# Generated by Django 4.2.19 on 2025-04-23 15:54

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('store', '0001_initial'),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True, help_text='When the sale was recorded', verbose_name='Transaction DateTime')),
                ('sub_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Amount before taxes', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('tax_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Tax rate in percentage (e.g., 8.25)', max_digits=5)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), editable=False, help_text='Calculated tax amount', max_digits=10)),
                ('grand_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), editable=False, help_text='Total including taxes', max_digits=10)),
                ('amount_paid', models.DecimalField(decimal_places=2, help_text='Amount received from customer', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('amount_change', models.DecimalField(decimal_places=2, default=Decimal('0.00'), editable=False, help_text='Change due to customer', max_digits=10)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales', to='accounts.customer', verbose_name='Customer Account')),
            ],
            options={
                'verbose_name': 'Sales Transaction',
                'verbose_name_plural': 'Sales Transactions',
                'db_table': 'sales',
                'ordering': ['-date_added'],
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, default='', help_text='Unique identifier for the purchase order', unique=True)),
                ('order_date', models.DateTimeField(auto_now_add=True, verbose_name='Order Date')),
                ('delivery_date', models.DateTimeField(blank=True, null=True, verbose_name='Actual Delivery Date')),
                ('quantity', models.PositiveIntegerField(help_text='Quantity received', validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Price Per Unit')),
                ('total_cost', models.DecimalField(decimal_places=2, editable=False, max_digits=10, verbose_name='Total Order Value')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('S', 'Shipped'), ('D', 'Delivered'), ('C', 'Cancelled')], default='P', max_length=1, verbose_name='Order Status')),
                ('notes', models.TextField(blank=True, help_text='Additional order details', null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchases', to='store.item', verbose_name='Inventory Item')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vendor_purchases', to='accounts.vendor')),
            ],
            options={
                'verbose_name': 'Inventory Purchase',
                'verbose_name_plural': 'Inventory Purchases',
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='SaleDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, help_text='Unit price at time of sale', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('quantity', models.PositiveIntegerField(help_text='Quantity purchased', validators=[django.core.validators.MinValueValidator(1)])),
                ('total_detail', models.DecimalField(decimal_places=2, editable=False, help_text='Line total (price Ã— quantity)', max_digits=10)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='store.item', verbose_name='Product')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='transactions.sale', verbose_name='Parent Sale')),
            ],
            options={
                'verbose_name': 'Sale Line Item',
                'verbose_name_plural': 'Sale Line Items',
                'db_table': 'sale_details',
                'indexes': [models.Index(fields=['sale'], name='sale_detail_sale_id_47ffcc_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['date_added'], name='sales_date_ad_57284e_idx'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['customer'], name='sales_custome_acc50a_idx'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['vendor'], name='transaction_vendor__d706cb_idx'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['status'], name='transaction_status_4bca5c_idx'),
        ),
    ]
